# Generated by Django 5.1.4 on 2025-01-24 08:16

import admin_portal.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cart_orders', '0001_initial'),
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(help_text='Description of the action performed', max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the action was performed')),
                ('user', models.ForeignKey(blank=True, help_text='Admin who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Refund amount for the order item.', max_digits=10)),
                ('status', models.CharField(choices=[('initiated', 'Refund Initiated'), ('processed', 'Refund Processed'), ('rejected', 'Refund Rejected'), ('implemented', 'Refund Implemented')], default='initiated', help_text='Current status of the refund.', max_length=20)),
                ('reason', models.TextField(default='__________', help_text='Reason provided by the customer for the refund.')),
                ('refund_initiated_date', models.DateTimeField(blank=True, help_text='The date when the refund was initiated.', null=True)),
                ('refund_processed_date', models.DateTimeField(blank=True, help_text='The date when the refund was processed.', null=True)),
                ('refund_rejected_date', models.DateTimeField(blank=True, help_text='The date when the refund was rejected.', null=True)),
                ('refund_implemented_date', models.DateTimeField(blank=True, help_text='The date when the refund was implemented.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date when the refund was created.')),
                ('order_item', models.ForeignKey(help_text='The order item for which the refund is requested.', on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='cart_orders.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='RefundMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(help_text='Image or video file supporting the refund request', upload_to=admin_portal.models.refund_media_upload_path)),
                ('refund', models.ForeignKey(help_text='The refund associated with this media', on_delete=django.db.models.deletion.CASCADE, related_name='media', to='admin_portal.refund')),
            ],
        ),
        migrations.CreateModel(
            name='SoftData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_address', models.TextField(help_text='Pickup address provided by admin')),
                ('shipping_address', models.TextField(help_text='Fetched from the order')),
                ('tracking_id', models.CharField(blank=True, help_text='Tracking ID from Delhivery', max_length=100, null=True)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Unpaid'), ('paid', 'Paid')], default='unpaid', help_text='Payment status for the order', max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight of the order in kilograms', max_digits=6)),
                ('dimensions', models.JSONField(help_text='Dimensions of the order (length, breadth, height) in cm')),
                ('serviceability_checked', models.BooleanField(default=False, help_text='Indicates if serviceability check is done')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soft_data', to='cart_orders.order')),
            ],
        ),
        migrations.CreateModel(
            name='VendorPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payout amount', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed')], default='pending', help_text='Status of the payout', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When the payout was processed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the payout was created')),
                ('vendor', models.ForeignKey(help_text='Vendor receiving the payout', on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='vendors.vendordetails')),
            ],
        ),
    ]
